package org.nir.bookstore.entities;
// Generated 3 Dec 2020, 21:03:10 by Hibernate Tools 5.2.12.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * OrderDetail generated by hbm2java  "OrderDetail.countByBook"
 */
@Entity
@NamedQueries({
	@NamedQuery(name = "OrderDetail.countByBook",
			query = "SELECT COUNT(*) FROM OrderDetail od WHERE od.book.bookId =: bookId")
		/*
		 * @NamedQuery(name = "OrderDetail.countByBook" , query =
		 * "SELECT COUNT() FROM OrderDetail od WHERE od.book.bookId =: bookId")
		 */
})
@Table(name = "order_detail", catalog = "bookstoredb")
public class OrderDetail implements java.io.Serializable
{

	//refactoring: create this id outside of any method
	private OrderDetailId id = new OrderDetailId(); 
	private Book book;
	private BookOrder bookOrder;

	//These 2 properties added after refactoring hibernate tool
	private int quantity;
	private float subtotal;

	public OrderDetail()
	{
	}

	public OrderDetail(OrderDetailId id)
	{
		this.id = id;
	}

	
	//refactoring: add quantity and subtotal 
	public OrderDetail(OrderDetailId id, Book book, BookOrder bookOrder, int quantity, float subtotal)
	{
		super();
		this.id = id;
		this.book = book;
		this.bookOrder = bookOrder;
		this.quantity = quantity;
		this.subtotal = subtotal;
	}

	//Refactoring : Remove the previousannotaions for quanitity and subtotal, and set nullable = false
	@EmbeddedId
	@AttributeOverrides({ 
			@AttributeOverride(name = "orderId", column = @Column(name = "order_id", nullable = false)),
			@AttributeOverride(name = "bookId", column = @Column(name = "book_id", nullable = false))})
	public OrderDetailId getId()
	{
		return this.id;
	}

	public void setId(OrderDetailId id)
	{
		this.id = id;
	}

	//Refactoirng : add the nullable = false
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "book_id", insertable = false, updatable = false,nullable = false )
	public Book getBook()
	{
		return this.book;
	}

	public void setBook(Book book)
	{
		this.book = book;
		//update refactoring:
		this.id.setBook(book);
	}

	//Refactoring: add the nullable = false
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_id", insertable = false, updatable = false , nullable = false)
	public BookOrder getBookOrder()
	{
		return this.bookOrder;
	}

	public void setBookOrder(BookOrder bookOrder)
	{
		this.bookOrder = bookOrder;
		//update refactoring
		this.id.setBookOrder(bookOrder);
	}
	
	/*
	 * Copy and paste these getters/setters from OrderDetailId with annotatinos!
	 */
	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) 
	{
		this.quantity = quantity;
	}

	@Column(name = "subtotal", nullable = false, precision = 12, scale = 0)
	public float getSubtotal() {
		return this.subtotal;
	}

	public void setSubtotal(float subtotal) {
		this.subtotal = subtotal;
	}

	
}
